version: 2

defaults: &defaults
    docker:
      - image: docker:17.11.0-ce-git
        environment:
          ENV: $BASH_ENV

install_dependency: &install_dependency
          name: Installation of build and deployment dependencies.
          command: |
            apk update
            apk add --no-cache bash openssl curl
            apk upgrade
            apk add --no-cache jq py-pip sudo
            sudo pip install awscli --upgrade
            
install_deploysuite: &install_deploysuite
          name: Installation of install_deploysuite.
          command: |
            git clone --branch dev_comm https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
            cp ./../buildscript/master_deploy.sh .
            cp ./../buildscript/buildenv.sh .
            cp ./../buildscript/awsconfiguration.sh .
restore_cache_settings_for_build: &restore_cache_settings_for_build
  key: docker-node-modules-v3-{{ checksum "package-lock.json" }}

save_cache_settings: &save_cache_settings    
  key: docker-node-modules-v3-{{ checksum "package-lock.json" }}  
  paths:
    - node_modules      

build_docker_image: &build_docker_image
          name: Build of Docker image
          command: |
            source buildenvvar
            ./build.sh
jobs:
  # Build & Deploy against testing backend
  "build-test":
    <<: *defaults
    steps:
      # Initialization.
      - checkout
      - setup_remote_docker
      - run: *install_dependency
      - run: *install_deploysuite
      # Restoration of node_modules from cache.
      - restore_cache: *restore_cache_settings_for_build
      - run: 
          name: "configuring environment"
          command: |
           # ./awsconfiguration.sh DEV
            #./buildenv.sh -e DEV -b test_communityapp_buildvar,test_communityapp_deployvar            
      # Build of Docker image.
      - run: *build_docker_image
      # Caching node modules.
      - save_cache: *save_cache_settings
      # Deployment.
      - deploy:
          name: Running MasterScript
          command: |
            source awsenvconf
            source buildenvvar
           # ./master_deploy.sh -d ECS -e DEV -t latest -s test_communityapp_taskvar -i communityapp
            ./topcoder-community-smoke-test/smoketest.sh dev dev-community-app-qavar.json              
                        


workflows:
  version: 2
  build:
    jobs:
      # This is alternate dev env for parallel testing
      - "build-test":
          context : org-global      
          filters:
            branches:
                only:
                  - hot-fix
                  - feature-groups-api
                  - smoke_testing_develop
      # This is beta env for production soft releases
  