version: 2

jobs:
  # Build & Deploy against development backend
  # "build-dev":
  build:
    docker:
      - image: docker:17.06.1-ce-git
    steps:
      # Initialization.
      - checkout
      - setup_remote_docker

      # Restoring node_modules from the previous build.
      - restore_cache:
          key: docker-node-modules-v1-{{ checksum "package-lock.json" }}

      # Install, test and build.
      - run:
          name: Install, test and build
          command: |
            docker create --name app node:8.2.1
            docker cp . app:/opt/app
            docker exec cd /opt/app
            docker exec npm install
            docker exec npm test
            docker exec npm run build
            docker exec export NODE_ENV=development

            # This should be copied only if package-lock.json was updated
            # by npm install command. If we check it and make this command
            # conditionally, it will save a bit more time for us.
            docker cp app:/opt/app/node_modules .
            docker commit -c "EXPOSE 3000" -c 'CMD["npm", "start"]' app $DEV_AWS_ACCOUNT_ID.dkr.ecr.$DEV_AWS_REGION.amazonaws.com/community-app:$CIRCLE_SHA1

      # Caching node modules.
      - save_cache:
          key: docker-node-modules-v1-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Deployment.
      - run:
          name: Installing AWS client
          command: |
            apk add --update bash jq py-pip sudo
            sudo pip install awscli --upgrade

      - deploy:
          command: ./deploy.sh DEV $CIRCLE_SHA1

  # Build & Deploy against production backend
  "build-prod":
    docker:
      - image: docker:17.06.1-ce-git
    steps:
      # Initialization.
      - checkout
      - setup_remote_docker

      # Restoring node_modules from the previous build.
      - restore_cache:
          key: docker-node-modules-{{ checksum "package-lock.json" }}

      # Building.
      - run: docker build --build-arg ENV=production -t $PROD_AWS_ACCOUNT_ID.dkr.ecr.$PROD_AWS_REGION.amazonaws.com/community-app:$CIRCLE_SHA1 .

      - save_cache:
          key: docker-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Deployment.
      - run: apk add --update bash jq py-pip sudo
      - run: sudo pip install awscli --upgrade
      - deploy:
          command: ./deploy.sh PROD $CIRCLE_SHA1

  # Test job for the cases when we do not need deployment. It just rapidly
  # installs (updates) app dependencies, and runs tests (ESLint, Stylelint,
  # Jest unit-tests).
  test:
    docker:
      - image: circleci/node:8.2.1
    steps:
      - checkout
      - restore_cache:
          key: test-node-modules-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: test-node-modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm test

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          filters:
            branches:
              only: develop

      # Production builds are exectuted only on tagged commits to the
      # master branch.
      - "build-prod":
          filters:
            branches:
              only: master
            tags:
              only: /v[0-9]+(\.[0-9]+)*/

      # Simple testing is executed for any branch other than "develop" and
      # "master".
      - test:
          filters:
            branches:
              ignore:
                - develop
                - master
